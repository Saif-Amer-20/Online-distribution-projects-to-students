@model ProjectManagement.DataContextModels.Project
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using ProjectManagement.Data
@using ProjectManagement.DataContextModels
@inject IAuthorizationService AuthorizationService
@inject ApplicationDbContext _Context;
@{
    ViewData["Title"] = "Details";
}
<script type="text/javascript">



    var gridStudentChoices, gridStudentApproved;
    $(document).ready(function () {

        // Load Grid using json object
        gridStudentChoices = $("#gridStudentChoices").grid({
            dataKey: "id",
            uiLibrary: "bootstrap",
            columns: [
                { field: "studentName", title: "Student Name", sortable: true, width: 40 },
                { field: "createdOn",  title: "Selection Date", sortable: true, width: 40, format: 'YYYY-MM-dd'},


            ],
            pager: { enable: true, limit: 5, sizes: [2, 5, 10, 20, 40] }
        }) ;

        // Load Grid using json object
        gridStudentApproved = $("#gridStudentApproved").grid({
            dataKey: "id",
            uiLibrary: "bootstrap",
            columns: [
                { field: "studentName", title: "Student Name", sortable: true, width: 40 },
                { field: "createdOn", title: "Selection Date", sortable: true, width: 40 },
            ],
            pager: { enable: true, limit: 5, sizes: [2, 5, 10, 20, 40] }
        });

    });

    function Approve(id) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Approve", "Projects")',
            data: { 'projectId': id },
            success: function (data) {
                DisplaySuccessMessage('Approved');
                $("#btnApprove").attr("disabled", true);
                $("#btnReject").attr("disabled", true);
                location.reload();
            },
            error: function (data) {
                DisplayErrorMessage('');
            }
        });
    }

    function Reject(id) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Reject", "Projects")',
            data: { 'projectId': id },
            success: function (data) {
                DisplaySuccessMessage('Rejected');
                $("#btnApprove").attr("disabled", true);
                $("#btnReject").attr("disabled", true);
                location.reload();
            },
            error: function (data) {
                DisplayErrorMessage('');
            }
        });
    }

    function Complete(id) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Complete", "Projects")',
            data: { 'projectId': id },
            success: function (data) {
                DisplaySuccessMessage('Approved');
                $("#btnComplete").attr("disabled", true);

            },
            error: function (data) {
                DisplayErrorMessage('');
                alert("Warning: the project is not exist");
            }
        });

    }
    function printContent(el){
        var restorepage = document.body.innerHTML;
        var printcontent = document.getElementById(el).innerHTML;
        document.body.innerHTML = printcontent;
        window.print();
        document.body.innerHTML = restorepage;
    }

</script>
<h2>Details</h2>
<div class="panel panel-default">
    <div class="panel-heading">
        Project Info

        @{
            var selectProject = _Context.ProjectStudentChoices.Where(p=>p.ProjectId==Model.Id&&!_Context.ProjectStudents.Select(c => c.ApplicationUserId).Contains(p.ApplicationUserId)).Select(p => p.ProjectId).SingleOrDefault();
           

            if (User.IsInRole("SystemAdmin"))
            {

                if (Model.IsApproved == null)
                {
                    <button class="btn btn-success" id="btnApprove" onclick="Approve('@Model.Id')">
                        Approve
                    </button>
                    <button class="btn btn-danger" id="btnReject" onclick="Reject('@Model.Id')">
                        Reject
                    </button>
                }

                else if (Model.IsApproved == true && !Model.IsClosed && selectProject == 0)
                { <button class="btn btn-success" disabled="disabled" id="btnComplete" onclick="Complete('@Model.Id')">
                      Allocate
                  </button>
                    <label class="text-danger">This Project doesn't has students selected</label>
                   
                }
                else if (Model.IsApproved == false)
                {
                    <label class="text-danger">This Project is Rejected</label>
                }
               else if (Model.IsApproved == true && !Model.IsClosed)
                {
                    <button class="btn btn-success" id="btnComplete" onclick="Complete('@Model.Id')">
                        Allocate
                    </button>
                }
            }
            if (!User.IsInRole("SystemAdmin"))
            {
                if (Model.IsApproved == false)
                {
                    <label class="text-danger">This Project is Rejected</label>
                }
            }

        }

    </div>
    <div class="panel-body" id="div1">
        <table class="table table-bordered table-striped">
            <tr>
                <td style="font-weight: bold; width: 20%;">
                    @Html.DisplayNameFor(model => model.Name)
                </td>
                <td >
                    @Html.DisplayFor(model => model.Name)
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.ProjectTools)
                </td>
                <td>
                    @Html.DisplayFor(model => model.ProjectTools)
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.ProjectType)
                </td>
                <td>
                    @Html.DisplayFor(model => model.ProjectType)
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.IsApproved)
                </td>
                <td>
                    @if (Model.IsApproved == false || Model.IsApproved==null)
                    {
                        <text>No</text>
                    }
                    else
                    {
                        <text>Yes</text>
                    }
                    @*@Html.DisplayFor(model => model.IsApproved)*@
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.ApprovalRejectionDate)
                </td>
                <td>
                    @Html.DisplayFor(model => model.ApprovalRejectionDate)
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.IsClosed)
                </td>
                <td>
                    @if (Model.IsClosed == false ||Model.IsClosed==null)
                    {
                        <text>No</text>
                    }
                    else
                    {
                        <text>Yes</text>
                    }
                    @*@Html.DisplayFor(model => model.IsClosed)*@

                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.MaxApprovedStudents)
                </td>
                <td>
                    @Html.DisplayFor(model => model.MaxApprovedStudents)
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.Description)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Description)
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </td>
                <td>
              @{
                  foreach (var i in _Context.Users)
                  {
                      if (i.Id==Model.CreatedBy)
                      {
                          <text>@i.FirstName @i.LastName</text>
                      }
                  }
              }
                </td>
            </tr>
        </table>
    </div>
    <button class="btn btn-primary" style="margin: 10px"onclick="printContent('div1')">Print Content</button>
</div>
<div class="panel panel-default">
    <div class="panel-heading">Project Bids</div>
    <div class="panel-body" id="div1">
        <table id="gridStudentChoices" data-source="@Url.Action("GetProjects", "ProjectStudentChoices", new { projectId = Model.Id })"></table>
    </div>
   
</div>
<hr />
<div class="panel panel-default">
    <div class="panel-heading">Approved Students</div>
    <div class="panel-body">
        <table id="gridStudentApproved" data-source="@Url.Action("GetProjects", "ProjectStudents", new { projectId = Model.Id })"></table>
    </div>
</div>


<div>
    <a asp-action="Edit" asp-route-id="@Model.Id"class="btn btn-primary">Edit</a> 
    <a asp-action="Index"class="btn btn-danger">Back to List</a>
</div>
